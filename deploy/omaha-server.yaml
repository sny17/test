apiVersion: v1
kind: ServiceAccount
metadata:
  name: omaha-server
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::712964028200:role/eksOmaha
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: omaha-config-private
data:
  DB_HOST: "postgres"
  SECRET_KEY: "asdfghjklqwertzuiop"
  DJANGO_SETTINGS_MODULE: "omaha_server.settings_prod"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  OMAHA_SERVER_PRIVATE: "True"
  CUP_REQUEST_VALIDATION: "True"
  AWS_DEFAULT_REGION: "ca-central-1"
  AWS_REGION: "ca-central-1"
  AWS_STORAGE_BUCKET_NAME: "ca-central-1-omaha-s3bucket"
  DB_PUBLIC_USER: "omaha_public"
  DB_PUBLIC_PASSWORD: "omaha_public_password"
  SENTRY_DSN: "https://5ac205e747f445d08d7c0ab4b0c05b76@o977510.ingest.sentry.io/6070898"
  C_FORCE_ROOT: "True" # celery specific
  AWS_S3_CUSTOM_DOMAIN: "omaha-proxy.dwos.com"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: omaha-config-public
data:
  DB_HOST: "postgres"
  SECRET_KEY: "asdfghjklqwertzuiop"
  DJANGO_SETTINGS_MODULE: "omaha_server.settings_prod"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  OMAHA_SERVER_PRIVATE: "False"
  CUP_REQUEST_VALIDATION: "True"
  AWS_DEFAULT_REGION: "ca-central-1"
  AWS_REGION: "ca-central-1"
  AWS_STORAGE_BUCKET_NAME: "ca-central-1-omaha-s3bucket"
  DB_PUBLIC_USER: "omaha_public"
  DB_PUBLIC_PASSWORD: "omaha_public_password"
  SENTRY_DSN: "https://5ac205e747f445d08d7c0ab4b0c05b76@o977510.ingest.sentry.io/6070898"
  AWS_S3_CUSTOM_DOMAIN: "omaha-proxy.dwos.com"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omaha-server-public
spec:
  replicas: 1
  selector:
    matchLabels:
      app: omaha-server-public
  template:
    metadata:
      labels:
        app: omaha-server-public
    spec:
      serviceAccountName: omaha-server
      containers:
      - image: 712964028200.dkr.ecr.ca-central-1.amazonaws.com/omaha-server:0.9.2-20230925
        imagePullPolicy: Always
        name: omaha-server-public
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: omaha-config-public
        volumeMounts:
          - name: cup-pem-keys-volume
            mountPath: /usr/src/app/cup_pem_keys
      volumes:
        - name: cup-pem-keys-volume
          secret:
            secretName: cup-pem-keys-secret
      securityContext:
        fsGroup: 65534 # To be able to read Kubernetes and AWS token files
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omaha-server-private
spec:
  replicas: 1
  selector:
    matchLabels:
      app: omaha-server-private
  template:
    metadata:
      labels:
        app: omaha-server-private
    spec:
      serviceAccountName: omaha-server
      initContainers:
      - name: init-migrate-db
        image: 712964028200.dkr.ecr.ca-central-1.amazonaws.com/omaha-server:0.9.2-20230925
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: omaha-config-private
        volumeMounts:
          - name: cup-pem-keys-volume
            mountPath: /usr/src/app/cup_pem_keys
        command: ["python"]
        args: ["manage.py", "migrate"]
      - name: init-create-admin
        image: 712964028200.dkr.ecr.ca-central-1.amazonaws.com/omaha-server:0.9.2-20230925
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: omaha-config-private
        volumeMounts:
          - name: cup-pem-keys-volume
            mountPath: /usr/src/app/cup_pem_keys
        command: ["python"]
        args: ["createadmin.py"]
      - name: init-collect-static
        image: 712964028200.dkr.ecr.ca-central-1.amazonaws.com/omaha-server:0.9.2-20230925
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: omaha-config-private
        volumeMounts:
          - name: cup-pem-keys-volume
            mountPath: /usr/src/app/cup_pem_keys
        command: ["python"]
        args: ["manage.py", "collectstatic", "--noinput"]
      containers:
      - image: 712964028200.dkr.ecr.ca-central-1.amazonaws.com/omaha-server:0.9.2-20230925
        imagePullPolicy: Always
        name: omaha-server-private
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: omaha-config-private
        volumeMounts:
          - name: cup-pem-keys-volume
            mountPath: /usr/src/app/cup_pem_keys
      volumes:
        - name: cup-pem-keys-volume
          secret:
            secretName: cup-pem-keys-secret
      securityContext:
        fsGroup: 65534 # To be able to read Kubernetes and AWS token files
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omaha-server-celery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: omaha-server-celery
  template:
    metadata:
      labels:
        app: omaha-server-celery
    spec:
      serviceAccountName: omaha-server
      containers:
      - image: 712964028200.dkr.ecr.ca-central-1.amazonaws.com/omaha-server:0.9.2-20230925
        imagePullPolicy: Always
        name: omaha-server-celery
        envFrom:
        - configMapRef:
            name: omaha-config-private
        command: ["celery"]
        args: ["worker", "-B", "-A", "omaha_server", "--loglevel=INFO"]
      securityContext:
        fsGroup: 65534 # To be able to read Kubernetes and AWS token files
---
apiVersion: v1
kind: Service
metadata:
  name: omaha-server-public
spec:
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
  type: NodePort
  selector:
    app: omaha-server-public
---
apiVersion: v1
kind: Service
metadata:
  name: omaha-server-private
spec:
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
  type: NodePort
  selector:
    app: omaha-server-private
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ip-address-type: ipv4
    alb.ingress.kubernetes.io/healthcheck-path: /healthcheck/status/
    # 67.212.85.162/32   eStruxture
    # 77.245.44.50/32    Berlin
    # 213.187.92.100/32  Chemnitz
    # 173.231.123.211/32 St Viateur
    alb.ingress.kubernetes.io/inbound-cidrs: 67.212.85.162/32,77.245.44.50/32,213.187.92.100/32,173.231.123.211/32
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ca-central-1:712964028200:certificate/16d48101-28ec-4819-a771-4f4f826c06bb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
  name: omaha-server-ingress-private
spec:
  rules:
  - host: omaha.aws.dwos.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: ssl-redirect
          servicePort: use-annotation
      - path: /*
        backend:
          serviceName: omaha-server-private
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ip-address-type: ipv4
    alb.ingress.kubernetes.io/healthcheck-path: /healthcheck/status/
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ca-central-1:712964028200:certificate/16d48101-28ec-4819-a771-4f4f826c06bb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
  name: omaha-server-ingress-public
spec:
  rules:
  - host: updates.aws.dwos.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: ssl-redirect
          servicePort: use-annotation
      - path: /*
        backend:
          serviceName: omaha-server-public
          servicePort: 80
